/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ignacio.proyectosensores.GUI;

import com.ignacio.proyectosensores.BLL.Log;
import com.ignacio.proyectosensores.BLL.Tag;
import com.ignacio.proyectosensores.DAL.SinBaseDatosException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author ignacio
 */
public class JDVerLogs extends javax.swing.JDialog {
	private final int idSensor;

	/**
	 * Creates new form JDVerLogs
	 */
	public JDVerLogs(java.awt.Frame parent, boolean modal, int idSensor) {
		super(parent, modal);
		this.idSensor = idSensor;
		initComponents();
		mostrarProblemas();
	}

	private void mostrarProblemas() {
		try {
			List<Log> ls = Log.findAllWithProblems(idSensor);
			t_vista.setModel(new LogTableModel(ls));
		}catch (SinBaseDatosException ex) {
			Logger.getLogger(JDVerLogs.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        rb_fallas = new javax.swing.JRadioButton();
        rb_historial = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_vista = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Ver:");

        buttonGroup1.add(rb_fallas);
        rb_fallas.setSelected(true);
        rb_fallas.setText("Fallas activas");
        rb_fallas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_fallasActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb_historial);
        rb_historial.setText("Historial");
        rb_historial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_historialActionPerformed(evt);
            }
        });

        t_vista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(t_vista);

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Dar por visto");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rb_fallas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_historial)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rb_fallas)
                    .addComponent(rb_historial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		try {
			Log.changeStatus(this.idSensor);
			JOptionPane.showMessageDialog(
					this, "Se han cambiados los estados de emergencia");
			rb_historial.setSelected(true);
		} catch (SinBaseDatosException ex) {
			Logger.getLogger(JDVerLogs.class.getName()).log(Level.SEVERE, null, ex);
			JOptionPane.showMessageDialog(
					this, "Error en la conexi√≥n");
		}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void rb_historialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_historialActionPerformed
		try {
			List<Log> ts = Log.findAllOf(this.idSensor);
			t_vista.setModel(new LogTableModel(ts));
		} catch (SinBaseDatosException ex) {
			Logger.getLogger(JDVerLogs.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_rb_historialActionPerformed

    private void rb_fallasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_fallasActionPerformed
		mostrarProblemas();
    }//GEN-LAST:event_rb_fallasActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rb_fallas;
    private javax.swing.JRadioButton rb_historial;
    private javax.swing.JTable t_vista;
    // End of variables declaration//GEN-END:variables

	private class LogTableModel extends AbstractTableModel {

		private List<Log> ls;
		private String columnas[] = {"Mensaje", "Fecha"};

		public LogTableModel(List<Log> ls) {
			this.ls = ls;
		}

		@Override
		public int getRowCount() {
			return ls.size();
		}

		@Override
		public int getColumnCount() {
			return columnas.length;
		}

		@Override
		public String getColumnName(int column) {
			return columnas[column];
		}


		@Override
		public Object getValueAt(int row, int column) {
			Object o = null;
			switch (column) {
				case 0:
					o = ls.get(row).getMensaje();
					break;
				case 1:
					SimpleDateFormat d
							= new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
					o = d.format(ls.get(row).getFecha());
					break;
				default:
					throw new AssertionError();
			}
			return o;
		}

	}
}
