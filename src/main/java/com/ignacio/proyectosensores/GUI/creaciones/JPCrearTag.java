package com.ignacio.proyectosensores.GUI.creaciones;

import com.ignacio.proyectosensores.BLL.ParametrosFaltantesException;
import com.ignacio.proyectosensores.BLL.Protocolo;
import com.ignacio.proyectosensores.BLL.Sensor;
import com.ignacio.proyectosensores.BLL.Tag;
import com.ignacio.proyectosensores.DAL.CodigoRepetidoException;
import com.ignacio.proyectosensores.DAL.SinBaseDatosException;
import com.ignacio.proyectosensores.GUI.JDBuscarSensor;
import com.ignacio.proyectosensores.GUI.JDModificarTag;
import com.ignacio.proyectosensores.GUI.util.ProtocoloComboModel;
import com.ignacio.proyectosensores.Main;
import com.ignacio.proyectosensores.modbus.manejo.BusquedaTag;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author ignacio
 */
public class JPCrearTag extends javax.swing.JPanel {

	private final Tag tag;
	private ProtocoloComboModel pcb;
	private final JFrame parent;

	/**
	 * Creates new form JPCrearTag
	 *
	 * @param parent
	 */
	public JPCrearTag(JFrame parent) {
		this.tag = new Tag();
		tag.setSegundos(1);
		this.parent = parent;
		initComponents();
		rellenoComboBox();
		rellenoTabla();
	}

	private void rellenoTabla() {
		try {
			List<Tag> ts = Tag.findAll();
			t_vista.setModel(new TagTableModel(ts));
			final TableColumn column = t_vista.getColumnModel().getColumn(1);
			column.setCellEditor(new TagCellEditor(this));
			column.setCellRenderer(new TagCellRenderer());
		} catch (SinBaseDatosException ex) {
			Logger.getLogger(JPCrearTag.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	private void rellenoComboBox() throws HeadlessException {
		//Obtener los protocolos
		List<Protocolo> a;
		try {
			a = Protocolo.findAll();
			pcb = new ProtocoloComboModel(a);
			cb_protocolo.setModel(pcb);
			cb_protocolo.setSelectedIndex(0);
		} catch (SinBaseDatosException ex) {
			JOptionPane.showMessageDialog(this, "Sin coneccion a la base datos");
			Logger.getLogger(JPCrearTag.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tf_nombre = new javax.swing.JTextField();
        tf_url = new javax.swing.JTextField();
        s_tiempo = new javax.swing.JSpinner();
        tf_sensorSeleccionado = new javax.swing.JTextField();
        b_buscarSensor = new javax.swing.JButton();
        cb_protocolo = new javax.swing.JComboBox<String>();
        b_agregar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_detalles = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_vista = new javax.swing.JTable();

        jLabel1.setText("Nombre:");

        jLabel2.setText("URL:");

        jLabel3.setText("Tiempo actualizacion:");

        jLabel4.setText("Sensor asociado:");

        jLabel5.setText("Protocolo");

        tf_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_nombreKeyReleased(evt);
            }
        });

        tf_url.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_urlKeyReleased(evt);
            }
        });

        s_tiempo.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        tf_sensorSeleccionado.setEditable(false);

        b_buscarSensor.setText("Buscar");
        b_buscarSensor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_buscarSensorActionPerformed(evt);
            }
        });

        cb_protocolo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_protocoloActionPerformed(evt);
            }
        });

        b_agregar.setText("Agregar");
        b_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_agregarActionPerformed(evt);
            }
        });

        jLabel6.setText("Detalles:");

        ta_detalles.setColumns(20);
        ta_detalles.setRows(5);
        jScrollPane1.setViewportView(ta_detalles);

        t_vista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(t_vista);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_nombre)
                            .addComponent(tf_url)
                            .addComponent(s_tiempo)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tf_sensorSeleccionado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_buscarSensor, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cb_protocolo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                    .addComponent(b_agregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(tf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(tf_url, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(s_tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(tf_sensorSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(b_buscarSensor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cb_protocolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_agregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b_buscarSensorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_buscarSensorActionPerformed
		List<Sensor> ls;
		try {
			ls = Sensor.findAllWithDependency();
			for (Sensor s : ls) {
				s.getMaquina().findDependencias();
			}
			JDBuscarSensor b = new JDBuscarSensor(parent, true, ls);
			b.setVisible(true);
			Sensor sensorSeleccionado = b.getSensorSeleccionado();
			if (sensorSeleccionado != null) {
				tag.setSensor(sensorSeleccionado);
				final String nombre = sensorSeleccionado.getNombre();
				if (nombre != null) {
					tf_sensorSeleccionado.setText(nombre);
				}
			}
		} catch (SinBaseDatosException ex) {
			Logger.getLogger(JPCrearTag.class.getName()).log(
					Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_b_buscarSensorActionPerformed

    private void cb_protocoloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_protocoloActionPerformed
		Protocolo p = (Protocolo) pcb.getAt(cb_protocolo.getSelectedIndex());
		tag.setProtocolo(p);
    }//GEN-LAST:event_cb_protocoloActionPerformed

    private void b_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_agregarActionPerformed
		try {
			final int segundos = (int) s_tiempo.getValue();
			tag.setSegundos(segundos);
			tag.setDetalle(ta_detalles.getText());
			tag.save();
			BusquedaTag.getInstance().addTag(tag);
			JOptionPane.showMessageDialog(this, "Tag agregado", "Exito",
					JOptionPane.INFORMATION_MESSAGE);
		} catch (SinBaseDatosException ex) {
			JOptionPane.showMessageDialog(this, "Sin base de datos.");
		} catch (CodigoRepetidoException ex) {
			JOptionPane.showMessageDialog(this, "El codigo ya existe");
		} catch (ParametrosFaltantesException ex) {
			JOptionPane.showMessageDialog(this, "Faltan datos por rellenar",
					"Error", JOptionPane.ERROR_MESSAGE);
		}
    }//GEN-LAST:event_b_agregarActionPerformed

    private void tf_nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_nombreKeyReleased
		final String text = tf_nombre.getText();
		tag.setNombre(text);
    }//GEN-LAST:event_tf_nombreKeyReleased

    private void tf_urlKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_urlKeyReleased
		final String text = tf_url.getText();
		tag.setUrl(text);
    }//GEN-LAST:event_tf_urlKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_agregar;
    private javax.swing.JButton b_buscarSensor;
    private javax.swing.JComboBox<String> cb_protocolo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner s_tiempo;
    private javax.swing.JTable t_vista;
    private javax.swing.JTextArea ta_detalles;
    private javax.swing.JTextField tf_nombre;
    private javax.swing.JTextField tf_sensorSeleccionado;
    private javax.swing.JTextField tf_url;
    // End of variables declaration//GEN-END:variables

	//Tabla
	private static class TagCellRenderer implements TableCellRenderer {

		@Override
		public Component getTableCellRendererComponent(JTable tabla,
				Object valor, boolean isSelected, boolean hasFocus,
				int row, int column) {
			JButton b = new JButton("Editar");
			return b;
		}
	}

	private static class TagCellEditor
			extends AbstractCellEditor
			implements TableCellEditor {

		private final JPCrearTag panel;

		public TagCellEditor(JPCrearTag t) {
			this.panel = t;
		}

		@Override
		public Object getCellEditorValue() {
			return true;
		}

		@Override
		public Component getTableCellEditorComponent(final JTable tabla,
				Object valor, boolean isSelected, final int row,
				final int column) {
			JButton b = new JButton("Editar");
			final Tag t = (Tag) tabla.getModel().getValueAt(row, column);
			try {
				t.findDependencias();
				b.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						JDModificarTag d = new JDModificarTag(
								Main.instancia, true, t);
						d.setVisible(true);
						panel.rellenoTabla();
					}
				});
			} catch (SinBaseDatosException ex) {
				Logger.getLogger(TagCellRenderer.class.getName()).log(Level.SEVERE, null, ex);
			}
			return b;
		}
	}

	private class TagTableModel extends AbstractTableModel {

		String columnas[] = {"Nombre", "Editar"};
		List<Tag> l;

		public TagTableModel(List<Tag> l) {
			this.l = l;
		}

		public void setLista(List<Tag> l) {
			this.l = l;
			fireTableDataChanged();
		}

		@Override
		public int getRowCount() {
			return l.size();
		}

		@Override
		public int getColumnCount() {
			return columnas.length;
		}

		@Override
		public String getColumnName(int column) {
			return columnas[column];
		}

		@Override
		public Object getValueAt(int row, int column) {
			return l.get(row);
		}

		@Override
		public boolean isCellEditable(int rowIndex, int columnIndex) {
			return columnIndex == 1;
		}

	}
}
