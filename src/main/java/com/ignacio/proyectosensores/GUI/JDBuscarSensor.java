/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ignacio.proyectosensores.GUI;

import com.ignacio.proyectosensores.BLL.Sensor;
import com.ignacio.proyectosensores.DAL.SinBaseDatosException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ignacio
 */
public class JDBuscarSensor extends javax.swing.JDialog {


	private SensorTableModel stm = new SensorTableModel(new ArrayList<Sensor>());
	private Sensor sensorSeleccionado;

	public Sensor getSensorSeleccionado() {
		return sensorSeleccionado;
	}

	/**
	 * Creates new form JDBuscarSensor
	 */
	public JDBuscarSensor(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_fuzzy = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tf_fuzzy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_fuzzyActionPerformed(evt);
            }
        });
        tf_fuzzy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_fuzzyKeyTyped(evt);
            }
        });

        jTable1.setModel(stm);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                    .addComponent(tf_fuzzy))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tf_fuzzy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_fuzzyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_fuzzyActionPerformed
		final String text = tf_fuzzy.getText();
		if (text.length() > 3) {
			try {
				ArrayList<Sensor> s = Sensor.findLike(text);
				for (Sensor sensor : s) {
					System.out.println(s);
				}
			} catch (SinBaseDatosException ex) {
				Logger.getLogger(JDBuscarSensor.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
    }//GEN-LAST:event_tf_fuzzyActionPerformed

    private void tf_fuzzyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_fuzzyKeyTyped
		final String text = tf_fuzzy.getText();
		ArrayList<Sensor> s;
		if (text.length() > 1) {
			try {
				s = Sensor.findLike(text);
			} catch (SinBaseDatosException ex) {
				Logger.getLogger(JDBuscarSensor.class.getName()).log(Level.SEVERE, null, ex);
				s = new ArrayList<>();
			}
		} else {
			s = new ArrayList<>();
		}
		stm = new SensorTableModel(s);
		stm.addColumn("Sensor");
		stm.addColumn("Maquina");
		stm.addColumn("Lugar");
		jTable1.setModel(stm);
    }//GEN-LAST:event_tf_fuzzyKeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
		if (evt.getClickCount() == 2) {
			int seleccionado = jTable1.getSelectedRow();
			sensorSeleccionado = (Sensor) stm.getValueAt(seleccionado, 0);
			dispose();
		}
    }//GEN-LAST:event_jTable1MouseClicked

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(JDBuscarSensor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(JDBuscarSensor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(JDBuscarSensor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(JDBuscarSensor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				JDBuscarSensor dialog = new JDBuscarSensor(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tf_fuzzy;
    // End of variables declaration//GEN-END:variables
}

class SensorTableModel extends DefaultTableModel {

	final ArrayList<Sensor> sensores;

	public SensorTableModel(ArrayList<Sensor> sensores) {
		this.sensores = sensores;
	}

	@Override
	public int getRowCount() {
		if (sensores != null) {
			return sensores.size();
		}
		return 0;
	}

	@Override
	public boolean isCellEditable(int row, int column) {
		return false;
	}

	@Override
	public Object getValueAt(int row, int column) {
		if (column == 0) {
			return sensores.get(row);
		} else {
			return ";";
		}
	}

	@Override
	public void addRow(Object[] rowData) {
	}

}
